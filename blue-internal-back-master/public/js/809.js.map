{"version":3,"file":"js/809.js","mappings":"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","sources":["webpack:///./node_modules/@kurkle/color/dist/color.esm.js","webpack:///./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack:///./node_modules/chart.js/dist/chart.js","webpack:///./node_modules/chart.js/auto/auto.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.3.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}